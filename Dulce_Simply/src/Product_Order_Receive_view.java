/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.YES_NO_OPTION;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Yonshisoru
 */
public class Product_Order_Receive_view extends javax.swing.JFrame {
    Connection con = null;
    Statement st = null;
    PreparedStatement pat = null;
    ResultSet rs = null;
    Database d = new Database();
    int timenaja = 0;
    Product_Order_Variable p = new Product_Order_Variable();
    String id = null;
    ArrayList<Product_Order_Variable> Product_order_list = new ArrayList<>();
    /**
     * Creates new form Product_Order_view
     */
    public Product_Order_Receive_view() {
        this.setLocationRelativeTo(null);
        initComponents();
        show_order_view();
        ordering_id.setText(p.getview());
    }
   public ArrayList<Product_Order_Variable>Product_order_view_List(){
       Product_order_list.clear(); 
       try{
        Class.forName("com.mysql.jdbc.Driver");
        //String sql  ="select POL_NUMBER,PO_ID,PRO_ID,PRO_UNITS,PRO_PRICE,PRO_NAME FROM PRO_ORDER_LIST NATURAL JOIN PRODUCT WHERE POL_DEL = 'N' AND PO_ID = 'O001' ORDER BY POL_NUMBER";         
        //String sql = "SELECT POL_NUMBER,PO_ID,PRO_ORDER_LIST.PRO_UNITS,PRO_ORDER_LIST.PRO_PRICE,PRO_NAME FROM PRO_ORDER_LIST INNER JOIN PRODUCT ON PRO_ORDER_LIST.PRO_ID = PRODUCT.PRO_ID WHERE PO_ID = '"+p.getview()+"' AND POL_DEL = 'N' ORDER BY POL_NUMBER";
     String sql ="SELECT PRL_NUMBER,PR_ID,PRO_ID,PRL_STATUS,PRO_NAME,PRL_CURRENT,PRL_UNITS,PRL_PRICE,PRL_STATUS FROM ((PRO_ORDER NATURAL JOIN PRO_RECEIVE)NATURAL JOIN PRO_REC_LIST)NATURAL JOIN PRODUCT WHERE PO_ID = '"+p.getview()+"' AND PO_DEL = 'N' ORDER BY PRL_NUMBER";
        /*con = DriverManager.getConnection("jdbc:mysql://localhost:3306/u787124245_dulce","root","");*/
         con = DriverManager.getConnection(d.url(),d.username(),d.password());
       st = con.createStatement();
        rs = st.executeQuery(sql);
        while(rs.next()){
           Product_Order_Variable p = new Product_Order_Variable();
            p.setProduct_Order_Receive_id(rs.getString("PRL_NUMBER"));
            p.setreceiveid(rs.getString("PR_ID"));
            p.setproductname(rs.getString("PRO_NAME"));
            p.setproductid(rs.getString("PRO_ID"));
            p.setunit(rs.getInt("PRL_UNITS"));
            p.setprice(rs.getInt("PRL_PRICE"));
            p.setreceivestatus(rs.getString("PRL_STATUS"));
            p.setcurrent(rs.getInt("PRL_CURRENT"));
            Product_order_list.add(p);
        }
        rs.close();
        st.close();
        con.close();
        }catch(Exception e){
            System.out.print(e);
        }
        return Product_order_list;
}
    public void show_order_view(){
        ArrayList<Product_Order_Variable>Product_order_list = Product_order_view_List();
        DefaultTableModel model = (DefaultTableModel)Product_Order_View_Table.getModel();
        Object[] row = new Object[7];
        for(int i=0;i<Product_order_list.size();i++){
            row[0]=Product_order_list.get(i).getProduct_Order_Receive_id();
            row[1]=Product_order_list.get(i).getproduct();
            row[2]=Product_order_list.get(i).getunit();
            row[3]=Product_order_list.get(i).getprice();
            row[4]=(Product_order_list.get(i).getunit()*Product_order_list.get(i).getprice());
            row[5]=Product_order_list.get(i).getcurrent();
            row[6]=Product_order_list.get(i).getreceivestatus();
            model.addRow(row);
        }
    }
    public String findproduct(String name){
        String output = null;
        for(int i =0;i<Product_order_list.size();i++){
            if(name.equals(Product_order_list.get(i).getproduct())){
                output = Product_order_list.get(i).getproductid();
                break;
            }
        }
        return output;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        ordering_id = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Product_Order_View_Table = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocationByPlatform(true);
        setPreferredSize(new java.awt.Dimension(800, 530));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("รหัสการสั่งสินค้า:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 20, -1, -1));

        ordering_id.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        getContentPane().add(ordering_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 20, 160, 40));

        Product_Order_View_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "รายการที่", "ชื่อสินค้า", "จำนวน", "ราคาต่อหน่วย", "ราคาสุทธิ", "รับสินค้าแล้วทั้งหมด", "สถานะการรับสินค้า"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Product_Order_View_Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Product_Order_View_TableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Product_Order_View_Table);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, 740, 330));

        jButton1.setText("ปิด");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 420, 150, 50));

        jButton2.setText("รีเฟรช");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 420, 150, 50));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void Product_Order_View_TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Product_Order_View_TableMouseClicked
       boolean confirm = false;
       boolean isnum = false;
       boolean isnull =false;
       String receiveid = null;
       int current = 0;
       int max = 0;
       double price = 0;
       String name = null;
       String input = null;
        if(Product_Order_View_Table.getModel().getValueAt(Product_Order_View_Table.getSelectedRow(),1).toString().equals(id)){
       System.out.println("DoubleClick");
       receiveid = Product_Order_View_Table.getModel().getValueAt(Product_Order_View_Table.getSelectedRow(),0).toString();
       current = Integer.parseInt(Product_Order_View_Table.getModel().getValueAt(Product_Order_View_Table.getSelectedRow(),5).toString());
       max = Integer.parseInt(Product_Order_View_Table.getModel().getValueAt(Product_Order_View_Table.getSelectedRow(),2).toString());
       price = Double.parseDouble(Product_Order_View_Table.getModel().getValueAt(Product_Order_View_Table.getSelectedRow(),3).toString());
       name =Product_Order_View_Table.getModel().getValueAt(Product_Order_View_Table.getSelectedRow(),1).toString();
       input = "fantasticbeastverygood";
       int received = 0;
            if(Product_Order_View_Table.getModel().getValueAt(Product_Order_View_Table.getSelectedRow(),6).toString().equals("Y")||Integer.parseInt(Product_Order_View_Table.getModel().getValueAt(Product_Order_View_Table.getSelectedRow(),2).toString())==Integer.parseInt(Product_Order_View_Table.getModel().getValueAt(Product_Order_View_Table.getSelectedRow(),5).toString())){
                JOptionPane.showMessageDialog(null, "สินค้ารายการนี้มีการรับเรียบร้อยแล้ว",null,JOptionPane.ERROR_MESSAGE);
            }else{
                  if(JOptionPane.showConfirmDialog(null,""+name+"มีการรับสินค้าแล้วใช่หรือไม่",null,YES_NO_OPTION)==JOptionPane.YES_OPTION){
                    confirm = true;
                    id=null;
                }else{
                    id=null;
                    confirm = false;
                }
            }
        }else{
            id=Product_Order_View_Table.getModel().getValueAt(Product_Order_View_Table.getSelectedRow(),1).toString();
        }
        if(confirm==true){
            p.setlist_showid(receiveid);
            p.setlist_product(name);
            p.setlist_unit(max);
            p.setlist_current(current);
            p.setlist_price(price);
            Product_Order_Receive_List_Panel pr = new Product_Order_Receive_List_Panel();
            pr.setVisible(true);
            p.setlist_productid(findproduct(name));
/*            try{
        input = p.showInputDialog(null,"ID:"+receiveid+"\nName:"+name+"\nHow many product was your received?",null,JOptionPane.YES_NO_CANCEL_OPTION);
        System.out.print(input);
        if(input.equals("")){
            isnull=true;
        }else{   
        for(int i =0;i<input.length();i++){
            if(Character.isDigit(input.charAt(i))){
                isnum = true;
            }else{
                isnum = false;
            }
        }
        }
            }catch (NullPointerException e){
                System.out.print("cancel");
            }
        if(Integer.parseInt(Product_Order_View_Table.getModel().getValueAt(Product_Order_View_Table.getSelectedRow(),2).toString())==Integer.parseInt(Product_Order_View_Table.getModel().getValueAt(Product_Order_View_Table.getSelectedRow(),4).toString())){
            
        }
        if(isnull==true){
        JOptionPane.showMessageDialog(null,"Denided process!\n\nYour can't input empty units.\nTry again.",null,JOptionPane.ERROR_MESSAGE);    
        }else{
        if(isnum==true){
            if(Integer.parseInt(input)==0){
                JOptionPane.showMessageDialog(null,"Denided process!\n\nYour can't input zero unit.\nTry again.",null,JOptionPane.ERROR_MESSAGE);
            }else{
                if(Integer.parseInt(input)>max){
                    JOptionPane.showMessageDialog(null,"Denided process!\n\nYour input was more than ordering units.\nTry again.",null,JOptionPane.ERROR_MESSAGE);
                }else{
                    System.out.print(current);
                String sql = "UPDATE PRO_ORDER_LIST SET CURRENT = "+(current)+" WHERE PRL_NUMBER='"+receiveid+"'";
                System.out.print(sql);
                }
            }
        }
        }
                /*
      try{
        Class.forName("com.mysql.jdbc.Driver");
        con = DriverManager.getConnection(d.url(),d.username(),d.password());
        pat = con.prepareStatement(sql);
        pat.executeUpdate(sql);
        //JOptionPane.showMessageDialog(null,"Crerate orderpayment success!");
        pat.close();
        con.close();
        }catch(Exception e){
            System.out.print(e);
        }
             DefaultTableModel dm = (DefaultTableModel)Product_Order_View_Table.getModel();
        while(dm.getRowCount() > 0)
        {       
        dm.removeRow(0);
        }
        show_order_view();*/
        }
    }//GEN-LAST:event_Product_Order_View_TableMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        DefaultTableModel dm = (DefaultTableModel)Product_Order_View_Table.getModel();
        while(dm.getRowCount() > 0)
        {       
        dm.removeRow(0);
        }
        show_order_view();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        Main_variable m = new Main_variable();
        m.setreceive(0);
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Product_Order_Receive_view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Product_Order_Receive_view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Product_Order_Receive_view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Product_Order_Receive_view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Product_Order_Receive_view().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Product_Order_View_Table;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel ordering_id;
    // End of variables declaration//GEN-END:variables
}
